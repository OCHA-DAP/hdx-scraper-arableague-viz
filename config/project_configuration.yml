tabs:
  regional: "RegionalData"
  regional_reqfund: "RegionalReqFund"
  national: "NationalData"
  subnational: "SubnationalData"
  covid_series: "CovidSeries"
  covid_trend: "CovidTrend"
  sources: "Sources"


googlesheets:
  prod: "https://docs.google.com/spreadsheets/d/1FFuz0U5akRhrjg2cQZ7SYZkGLvRmvuSrDCa4SyeU-X0/edit#gid=0"

json:
  filepath: "all.json"

additional_sources:
  - indicator: "#food-prices"
    dataset: "global-wfp-food-prices"
  - indicator: "#vaccination-campaigns"
    dataset: "immunization-campaigns-impacted"
  - indicator: "#access-data"
    source: "Multiple sources"
    force_date_today: True
    source_url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=1565063847&single=true&output=csv"
  - indicator: "#affected+infected+sex+new+avg+per100000"
    source: "Multiple sources"
    force_date_today: True
    source_url: "https://data.humdata.org/search?q=((organization:world-health-organization%20AND%20notes:Coronavirus)%20OR%20organization:global-health-50-50)"
  - indicator: "#affected+food+p3plus+num"
    source: "Multiple sources"
    force_date_today: True
    source_url: "https://data.humdata.org/search?q=(name:ipc-country-data%20OR%20name:cadre-harmonise)"

# national
scraper_national:
  population:
    source: "WorldPop"
    source_url: "https://data.humdata.org/search?organization=worldpop&q=%22population%20counts%22"
    url: "http://api.worldbank.org/v2/en/indicator/SP.POP.TOTL?downloadformat=excel&dataformat=list"
    format: "xls"
    sheet: "Data"
    headers: 3
    prefilter: "Value != ''"
    adm_cols:
      - "Country Code"
    date_col: "Year"
    date_type: "year"
    input_cols:
      - "Value"
    output_cols:
      - "Population"
    output_hxltags:
      - "#population"
  economicindex:
    dataset: "covid-19-economic-exposure-index"
    format: "xlsx"
    sheet: "economic exposure"
    adm_cols:
      - "Country"
    input_cols:
      - "Covid 19 Economic exposure index"
    input_transforms:
      "Covid 19 Economic exposure index": "number_format(Covid 19 Economic exposure index, trailing_zeros=False)"
    output_cols:
      - "EconomicExposure"
    output_hxltags:
      - "#severity+economic+num"
  gam:
    dataset: "world-global-expanded-database-on-severe-wasting"
    format: "xlsx"
    sheet: "Trend"
    headers:
      - 3
      - 4
    adm_cols:
      - "ISO"
    date_col: "Year*"
    date_type: "year"
    input_cols:
      - "National Point Estimate"
    input_transforms:
      "National Point Estimate": "number_format(National Point Estimate, trailing_zeros=False)"
    output_cols:
      - "Malnutrition Estimate"
    output_hxltags:
      - "#severity+malnutrition+num+national"
  inneed:
    dataset: "interagency-response-plans"
    format: "csv"
    use_hxl: True
    input_cols:
      - "#inneed"
    output_cols:
      - "PeopleInNeed"
    output_hxltags:
      - "#affected+inneed"
  idps:
    dataset: "idmc-internally-displaced-persons-idps"
    format: "csv"
    use_hxl: True
    date_col: "#date+year"
    date_type: "year"
    input_cols:
      - "#affected+idps+ind+stock+conflict"
      - "#affected+idps+ind+stock+disaster"
    input_transforms:
      "#affected+idps+ind+stock+conflict": "int(#affected+idps+ind+stock+conflict) if #affected+idps+ind+stock+conflict else 0"
      "#affected+idps+ind+stock+disaster": "int(#affected+idps+ind+stock+disaster) if #affected+idps+ind+stock+disaster else 0"
    process_cols:
      - "#affected+idps+ind+stock+conflict + #affected+idps+ind+stock+disaster"
    output_cols:
      - "TotalIDPs"
    output_hxltags:
      - "#affected+displaced"
  travel:
    dataset: "covid-19-global-travel-restrictions-and-airline-information"
    format: "csv"
    adm_cols:
      - "iso3"
    input_cols:
      - "info"
      - "published"
    input_append:
      - "info"
    input_keep:
      - "published"
    output_cols:
      - "TravelRestrictions"
      - "TravelRestrictionsPublished"
    output_hxltags:
      - "#severity+travel"
      - "#severity+date+travel"
  allocations:
    source:
      "#value+cbpf+funding+total+usd": "CBPF"
      "#value+cbpf+funding+gmempty+total+usd": "CBPF"
      "#value+cbpf+funding+gm0+total+usd": "CBPF"
      "#value+cbpf+funding+gm1+total+usd": "CBPF"
      "#value+cbpf+funding+gm2+total+usd": "CBPF"
      "#value+cbpf+funding+gm3+total+usd": "CBPF"
      "#value+cbpf+funding+gm4+total+usd": "CBPF"
      "default_source": "CERF"
    source_url:
      "#value+cbpf+funding+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gmempty+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm0+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm1+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm2+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm3+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm4+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "default_url": "https://data.humdata.org/dataset/cerf-allocations"
    dataset: "cerf-allocations"
    url: "https://cbpfgms.github.io/pfbi-data/download/full_pfmb_allocations.csv"
    format: "csv"
    sort:
      reverse: True
      keys:
        - "AllocationYear"
    date_col: "AllocationYear"
    date_type: "year"
    single_maxdate: True
    adm_cols:
      - "CountryCode"
    filter_cols:
      - "FundType"
      - "GenderMarker"
    subsets:
      - filter: "FundType == 'CBPF'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFunding"
        output_hxltags:
          - "#value+cbpf+funding+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == ''"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGMEmpty"
        output_hxltags:
          - "#value+cbpf+funding+gmempty+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '0'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM0"
        output_hxltags:
          - "#value+cbpf+funding+gm0+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '1'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM1"
        output_hxltags:
          - "#value+cbpf+funding+gm1+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '2'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM2"
        output_hxltags:
          - "#value+cbpf+funding+gm2+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '3'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM3"
        output_hxltags:
          - "#value+cbpf+funding+gm3+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '4'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM4"
        output_hxltags:
          - "#value+cbpf+funding+gm4+total+usd"
      - filter: "FundType == 'CERF'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFunding"
        output_hxltags:
          - "#value+cerf+funding+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == ''"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGMEmpty"
        output_hxltags:
          - "#value+cerf+funding+gmempty+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '0'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM0"
        output_hxltags:
          - "#value+cerf+funding+gm0+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '1'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM1"
        output_hxltags:
          - "#value+cerf+funding+gm1+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '2'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM2"
        output_hxltags:
          - "#value+cerf+funding+gm2+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '3'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM3"
        output_hxltags:
          - "#value+cerf+funding+gm3+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '4'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM4"
        output_hxltags:
          - "#value+cerf+funding+gm4+total+usd"
  sadd:
    dataset: "covid-19-sex-disaggregated-data-tracker"
    format: "csv"
# No longer needed
#    external_filter:
      # Editable link https://docs.google.com/spreadsheets/d/1KReA4uWurU7KXHDaSrEcR7hUTUFuDKO-nZviZyaNdPI/edit#gid=434885896
#      url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vR9PhPG7-aH0EkaBGzXYlrO9252gqs-UuKIeDQr9D3pOLBOdQ_AoSwWi21msHsdyT7thnjuhSY6ykSX/pub?gid=434885896&single=true&output=csv"
#      hxltags:
#        - "#country+code+v_iso2"
    adm_cols:
      - "country_code"
    input_cols:
      - "cases_male_pct"
      - "cases_female_pct"
      - "deaths_male_pct"
      - "deaths_female_pct"
    input_transforms:
      "cases_male_pct": "number_format(get_numeric_if_possible(cases_male_pct), trailing_zeros=False)"
      "cases_female_pct": "number_format(get_numeric_if_possible(cases_female_pct), trailing_zeros=False)"
      "deaths_male_pct": "number_format(get_numeric_if_possible(deaths_male_pct), trailing_zeros=False)"
      "deaths_female_pct": "number_format(get_numeric_if_possible(deaths_female_pct), trailing_zeros=False)"
    output_cols:
      - "Cases (% male)"
      - "Cases (% female)"
      - "Deaths (% male)"
      - "Deaths (% female)"
    output_hxltags:
      - "#affected+infected+m+pct"
      - "#affected+f+infected+pct"
      - "#affected+killed+m+pct"
      - "#affected+f+killed+pct"
  oxcgrt:
    dataset: "oxford-covid-19-government-response-tracker"
    format: "csv"
    use_hxl: True
    date_col: "#date"
    date_type: "date"
  covidtests:
    dataset: "total-covid-19-tests-performed-by-country"
    format: "xlsx"
    prefilter: "new_tests is not None and new_tests > 0"
    date_col: "date"
    date_type: "date"
    adm_cols:
      - "iso_code"
    input_cols:
      - "new_tests"
      - "new_tests_per_thousand"
      - "new_tests_smoothed_per_thousand"
      - "positive_rate"
    output_cols:
      - "New Tests"
      - "New Tests Per Thousand"
      - "New Tests Per Thousand (7-day)"
      - "Positive Test Rate"
    output_hxltags:
      - "#affected+tested"
      - "#affected+tested+per1000"
      - "#affected+tested+avg+per1000"
      - "#affected+tested+positive+pct"
  access:
    source:
      "#access+visas+pct": "OCHA"
      "#access+travel+pct": "OCHA"
      "#event+year+previous+num": "Aid Workers Database"
      "#event+year+todate+num": "Aid Workers Database"
      "#event+year+previous+todate+num": "Aid Workers Database"
      "#activity+cerf+project+insecurity+pct": "OCHA"
      "#activity+cbpf+project+insecurity+pct": "OCHA"
      "#population+education": "UNESCO"
      "default_source": "Multiple sources"
    source_url:
      "#event+year+previous+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+previous+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "default_url": "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=1565063847&single=true&output=csv"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=574237756&single=true&output=csv"
    format: "csv"
    use_hxl: True
    input_transforms:
      "#access+visas+pct": "get_numeric_if_possible(#access+visas+pct)"
      "#access+travel+pct": "get_numeric_if_possible(#access+travel+pct)"
      "#activity+cerf+project+insecurity+pct": "get_numeric_if_possible(#activity+cerf+project+insecurity+pct)"
      "#activity+cbpf+project+insecurity+pct": "get_numeric_if_possible(#activity+cbpf+project+insecurity+pct)"
      "#population+education": "get_numeric_if_possible(#population+education)"
  unicef_sam:
    dataset: "number-of-admissions-for-treatment-of-severe-acute-malnutrition-sam"
    format: "csv"
    use_hxl: True
    adm_cols:
      - "#country+code"
    date_col: "#date"
    date_type: "date"
    use_date_from_date_col: True
    input_cols:
      - "#affected+reached"
    output_cols:
      - "NoChildrenSAM"
    output_hxltags:
      - "#affected+children+sam"
  covax:
    dataset: "covid-19-vaccine-doses-in-hrp-countries"
    format: "csv"
    use_hxl: True
    adm_cols:
      - "#country+code"
    input_cols:
      - "#capacity+covax+delivered+doses"
      - "#capacity+others+delivered+doses"
      - "#capacity+delivered+total"
      - "#capacity+coverage+one_dose"
      - "#meta+source_country"
    input_ignore_vals:
      - "N/A"
    input_transforms:
      "#capacity+covax+delivered+doses": "get_numeric_if_possible(#capacity+covax+delivered+doses)"
      "#capacity+others+delivered+doses": "get_numeric_if_possible(#capacity+others+delivered+doses)"
      "#capacity+delivered+total": "get_numeric_if_possible(#capacity+delivered+total)"
      "#capacity+coverage+one_dose": "number_format(get_numeric_if_possible(#capacity+coverage+one_dose), trailing_zeros=False)"
    output_cols:
      - "Covax Delivered Doses"
      - "Other Delivered Doses"
      - "Total Delivered Doses"
      - "Population % covered by delivered doses"
      - "Source country for doses"
    output_hxltags:
      - "#capacity+doses+delivered+covax"
      - "#capacity+doses+delivered+others"
      - "#capacity+doses+delivered+total"
      - "#targeted+doses+delivered+pct"
      - "#meta+source+doses+country+name"
  ourworldindata:
    dataset: "covid-19-vaccinations"
    format: "csv"
    use_hxl: True
    external_filter:
      url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vTVzu79PPTfaA2syevOQfyRRjy63dJWitqu0fFbXIQCzoUn9K9TiMWMRvFGg1RBsnLmgYugzSEiAye2/pub?gid=992438980&single=true&output=csv"
      hxltags:
       - "#country+code"
    adm_cols:
      - "#country+code"
    date_col: "#date"
    date_type: "date"
    input_cols:
      - "#total+vaccinations"
    output_cols:
      - "TotalDosesAdministered"
    output_hxltags:
      - "#capacity+doses+administered+total"
  worldbank:
    dataset: "harmonized-covid-19-household-monitoring-surveys"
    format: "xlsx"
    sheet: "2. Harmonized Indicators"
    adm_cols:
      - "code"
    date_col:
      - "year"
      - "month"
    date_type: "int"
    filter_cols:
      - "indicator"
      - "urban_rural"
      - "industry"
    subsets:
      - filter: "indicator == 'Safe_anysource' and urban_rural == 'National' and industry == 'All'"
        input_cols:
          - "indicator_val"
        input_transforms:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output_cols:
          - "ReceivedAssistance"
        output_hxltags:
          - "#targeted+assist+hh+pct"
      - filter: "indicator == 'FS_skipmeal' and urban_rural == 'National' and industry == 'All'"
        input_cols:
          - "indicator_val"
        input_transforms:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output_cols:
          - "SkippedMeals"
        output_hxltags:
          - "#affected+skip_meals+hh+pct"
      - filter: "indicator == 'Labo_stop' and urban_rural == 'National' and industry == 'All'"
        input_cols:
          - "indicator_val"
        input_transforms:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output_cols:
          - "StoppedWorking"
        output_hxltags:
          - "#affected+stop_working+hh+pct"
      - filter: "indicator == 'Copi_reduce' and urban_rural == 'National' and industry == 'All'"
        input_cols:
          - "indicator_val"
        input_transforms:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output_cols:
          - "ReducedConsumption"
        output_hxltags:
          - "#affected+less_consumption+hh+pct"
      - filter: "indicator == 'Inco_WachangenLD' and urban_rural == 'National' and industry == 'All'"
        input_cols:
          - "indicator_val"
        input_transforms:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output_cols:
          - "DecreasedWages"
        output_hxltags:
          - "#affected+less_wages+hh+pct"
  covax_allocations:
    dataset: "covax-round-6-allocations"
    format: "csv"
    headers: 2
    adm_cols:
      - "ISO3"
    input_cols:
      - "Total to date"
    input_transforms:
      "Total to date": "get_numeric_if_possible(Total to date)"
    output_cols:
      - "DosesAllocated"
    output_hxltags:
      - "#capacity+doses+forecast+covax"
  food_basket:
    dataset: "cost-of-the-food-basket"
    url: "https://wfp.sharepoint.com/:x:/s/EconomicMarketAnalysis/EVeSfcSQAvtGtAE3aseaNHoB5uENuNW4anaJ84ryqQI8Qw?download=1"
    format: "csv"
    prefilter: "MMFPSNDataLevel.strip() == 'National' and MMFPSNTotImpactQuarterlyChange != ''"
    sort:
      reverse: True
      keys:
        - "MMFPSNDate"
    adm_cols:
      - "CountryName"
    date_col: "MMFPSNDate"
    date_type: "date"
    single_maxdate: True
    filter_cols:
      - "MMFPSNDataLevel"
      - "MMFPSNTotImpactQuarterlyChange"
    input_cols:
      - "MMFPSNTotImpactQuarterlyChange"
    input_transforms:
      "MMFPSNTotImpactQuarterlyChange": "get_fraction_str(MMFPSNTotImpactQuarterlyChange, 100, trailing_zeros=False)"
    output_cols:
      - "ChangeInFoodBasketCost"
    output_hxltags:
      - "#indicator+foodbasket+change+pct"
  financing:
    dataset: "world-bank-and-gavi-vaccine-financing"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSSKfpC4IaUs9iWc7TSrOoPNuR7cJ4civ8csvt8S_RcCXVG7xNxcyQ8Z-vSnJZ_lXYOTGlLh6Vnmn1Y/pub?gid=0&single=true&output=csv"
    format: "csv"
    adm_cols:
      - "ISO3"
    input_cols:
      - "Amount ($m)"
      - "GAVI CDS (early access) Approved"
      - "GAVI CDS (needs based) Approved"
      - "GAVI CDS (early access) Disbursed"
      - "GAVI CDS (needs based) Disbursed"
      - "TOTAL (WB+GAVI) ($m)"
    input_transforms:
      "Amount ($m)": "get_numeric_if_possible(Amount ($m))"
      "GAVI CDS (early access) Approved": "get_numeric_if_possible(GAVI CDS (early access) Approved)"
      "GAVI CDS (needs based) Approved": "get_numeric_if_possible(GAVI CDS (needs based) Approved)"
      "GAVI CDS (early access) Disbursed": "get_numeric_if_possible(GAVI CDS (early access) Disbursed)"
      "GAVI CDS (needs based) Disbursed": "get_numeric_if_possible(GAVI CDS (needs based) Disbursed)"
      "TOTAL (WB+GAVI) ($m)": "get_numeric_if_possible(TOTAL (WB+GAVI) ($m))"
    sum_cols:
      - formula: "Amount ($m)"
      - formula: "GAVI CDS (early access) Approved"
      - formula: "GAVI CDS (needs based) Approved"
      - formula: "GAVI CDS (early access) Disbursed"
      - formula: "GAVI CDS (needs based) Disbursed"
      - formula: "TOTAL (WB+GAVI) ($m)"
    output_cols:
      - "WorldBankFinancingApproved"
      - "GAVICDSEarlyAccessApproved"
      - "GAVICDSNeedsApproved"
      - "GAVICDSEarlyAccessDisbursed"
      - "GAVICDSNeedsDisbursed"
      - "WorldBankGAVIFinancingTotal"
    output_hxltags:
      - "#value+financing+worldbank+approved"
      - "#value+financing+gavi+earlyaccess+approved"
      - "#value+financing+gavi+needs+approved"
      - "#value+financing+gavi+earlyaccess+disbursed"
      - "#value+financing+gavi+needs+disbursed"
      - "#value+financing+approved"
  closure_duration:
    dataset: "global-school-closures-covid19"
    format: "xlsx"
    adm_cols:
      - "Country"
    input_cols:
      - "Duration of FULL and PARTIAL school closures (in weeks)"
    output_cols:
      - "Full Partial Closure Duration"
    output_hxltags:
      - "#impact+full_partial+weeks"

unhcr_myanmar_idps:
  url: "https://data.unhcr.org/population/?widget_id=264111&geo_id=693&population_group=5407,4999"

fts:
  source: "OCHA"
  source_url: "https://data.humdata.org/dataset/covid-19-data-visual-inputs"
  url: "https://api.hpc.tools/v"

food_prices:
  dataset: "global-wfp-food-prices"
  base_url: "https://api.wfp.org"
  format: "csv"

vaccination_campaigns:
  dataset: "immunization-campaigns-impacted"
  format: "csv"

unhcr:
  source: "UNHCR"
  source_url: "https://data.humdata.org/organization/unhcr"
  url: "https://data2.unhcr.org/population/?population_collection=%d&geo_id=%s"
  population_collections:
    - 4
    - 28
    - 29
    - 71
  exclude:
    - "VEN"

inform:
  dataset: "inform-global-crisis-severity-index"
  url: "https://api.acaps.org/api/v1/inform-severity-index/%s/?page=1"
  format: "xlsx"

who_covid:
  dataset: "coronavirus-covid-19-cases-and-deaths"
  format: "csv"

covax_deliveries:
  dataset: "covid-19-vaccine-doses-in-hrp-countries"
  format: "csv"
  url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vTVzu79PPTfaA2syevOQfyRRjy63dJWitqu0fFbXIQCzoUn9K9TiMWMRvFGg1RBsnLmgYugzSEiAye2/pub?gid=1635331605&single=true&output=csv"

education_closures:
  dataset: "global-school-closures-covid19"
  resource: "School Closures"
  format: "csv"

education_enrolment:
  dataset: "global-school-closures-covid19"
  resource: "Enrollment data"
  format: "xlsx"

scraper_regional:
  allocations:
    source:
      "#value+cbpf+funding+total+usd": "CBPF"
      "#value+cbpf+funding+gmempty+total+usd": "CBPF"
      "#value+cbpf+funding+gm0+total+usd": "CBPF"
      "#value+cbpf+funding+gm1+total+usd": "CBPF"
      "#value+cbpf+funding+gm2+total+usd": "CBPF"
      "#value+cbpf+funding+gm3+total+usd": "CBPF"
      "#value+cbpf+funding+gm4+total+usd": "CBPF"
      "default_source": "CERF"
    source_url:
      "#value+cbpf+funding+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gmempty+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm0+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm1+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm2+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm3+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm4+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "default_url": "https://data.humdata.org/dataset/cerf-allocations"
    dataset: "cerf-allocations"
    url: "https://cbpfgms.github.io/pfbi-data/download/full_pfmb_allocations.csv"
    format: "csv"
    sort:
      reverse: True
      keys:
        - "AllocationYear"
    date_col: "AllocationYear"
    date_type: "year"
    single_maxdate: True
    filter_cols:
      - "FundType"
      - "GenderMarker"
    subsets:
      - filter: "FundType == 'CBPF'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFunding"
        output_hxltags:
          - "#value+cbpf+funding+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == ''"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGMEmpty"
        output_hxltags:
          - "#value+cbpf+funding+gmempty+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '0'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM0"
        output_hxltags:
          - "#value+cbpf+funding+gm0+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '1'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM1"
        output_hxltags:
          - "#value+cbpf+funding+gm1+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '2'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM2"
        output_hxltags:
          - "#value+cbpf+funding+gm2+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '3'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM3"
        output_hxltags:
          - "#value+cbpf+funding+gm3+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '4'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CBPFFundingGM4"
        output_hxltags:
          - "#value+cbpf+funding+gm4+total+usd"
      - filter: "FundType == 'CERF'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFunding"
        output_hxltags:
          - "#value+cerf+funding+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == ''"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGMEmpty"
        output_hxltags:
          - "#value+cerf+funding+gmempty+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '0'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM0"
        output_hxltags:
          - "#value+cerf+funding+gm0+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '1'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM1"
        output_hxltags:
          - "#value+cerf+funding+gm1+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '2'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM2"
        output_hxltags:
          - "#value+cerf+funding+gm2+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '3'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM3"
        output_hxltags:
          - "#value+cerf+funding+gm3+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '4'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
        output_cols:
          - "CERFFundingGM4"
        output_hxltags:
          - "#value+cerf+funding+gm4+total+usd"
  contributions:
    source:
      "#value+cbpf+funding+total+usd": "CBPF"
      "default_source": "CERF"
    source_url:
      "#value+cbpf+funding+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "default_url": "https://data.humdata.org/dataset/cerf-allocations"
    dataset: "cerf-allocations"
    url: "https://cbpfgms.github.io/pfbi-data/download/pfmb_contributions.csv"
    format: "csv"
    sort:
      reverse: True
      keys:
        - "FiscalYear"
    date_col: "FiscalYear"
    date_type: "year"
    single_maxdate: True
    filter_cols:
      - "FundType"
    subsets:
      - filter: "FundType == 'CBPF'"
        input_cols:
          - "PaidAmt"
          - "PledgeAmt"
        input_transforms:
          PaidAmt: "float(PaidAmt) if PaidAmt else 0"
          PledgeAmt: "float(PledgeAmt)"
        sum_cols:
          - formula: "PaidAmt+PledgeAmt"
        output_cols:
          - "CBPFContributions"
        output_hxltags:
          - "#value+cbpf+contributions+total+usd"
      - filter: "FundType == 'CERF'"
        input_cols:
          - "PaidAmt"
          - "PledgeAmt"
        input_transforms:
          PaidAmt: "float(PaidAmt) if PaidAmt else 0"
          PledgeAmt: "float(PledgeAmt)"
        sum_cols:
          - formula: "PaidAmt+PledgeAmt"
        output_cols:
          - "CERFContributions"
        output_hxltags:
          - "#value+cerf+contributions+total+usd"
  ourworldindata:
    dataset: "covid-19-vaccinations"
    format: "csv"
    use_hxl: True
    prefilter: "#country+code == 'OWID_WRL'"
    date_col: "#date"
    date_type: "date"
    filter_cols:
      - "#country+code"
    input_cols:
      - "#total+vaccinations"
    output_cols:
      - "TotalDosesAdministered"
    output_hxltags:
      - "#capacity+doses+administered+total"
  inneed:
    dataset: "interagency-response-plans"
    format: "csv"
    use_hxl: True
    prefilter: "#meta+included == 'TRUE'"
    filter_cols:
      - "#meta+included"
    input_cols:
      - "#inneed"
    sum_cols:
      - formula: "#inneed"
    output_cols:
      - "PeopleInNeed"
    output_hxltags:
      - "#affected+inneed"
  inneed_numcountries:
    dataset: "interagency-response-plans"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSUJdFPpj3N6m4L5XiZSl1OQm7oVcclVM3IDQm1P6K5SfuBNIB2M0-BJhdR0KQ-w95lJUiC4wMWw9RP/pub?gid=881913165&single=true&output=csv"
    format: "csv"
    use_hxl: True
    input_cols:
      - "#meta+countries+num"
    output_cols:
      - "NumCountriesInNeed"
    output_hxltags:
      - "#meta+countries+inneed+num"


# subnational
ipc:
  dataset: "ipc-country-data"
  url: "http://map.ipcinfo.org/api/public/population-tracking-tool/data/2017,%d/?page=%d&limit=1&condition=A&export=true&country=%s"

scraper_subnational:
  population:
    source: "WorldPop"
    source_url: "https://data.humdata.org/search?organization=worldpop&q=%22population%20counts%22"
    dataset: "global-humanitarian-response-plan-covid-19-administrative-boundaries-and-population-statistics"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vS3_uBOV_uRDSxOggfBus_pkCs6Iw9lm0nAxzwG14YF_frpm13WPKiM1oNnQ9zrUA/pub?gid=1565793974&single=true&output=csv"
    format: "csv"
    adm_cols:
      - "alpha_3"
      - "ADM1_PCODE"
    input_cols:
      - "POPULATION"
    input_transforms:
      "POPULATION": "get_numeric_if_possible(POPULATION)"
    output_cols:
      - "Population"
    output_hxltags:
      - "#population"
  healthfac:
    source: "HOT"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vT-266S0iZDEvcQmxC2i7LNHWi4fUXtDkrwp8D6NMyHArxnegAYO9XXVnhuHaWvdxaoZTq7M6yGLaPX/pub?gid=1620744216&single=true&output=csv"
    format: "csv"
    adm_cols:
      - "alpha_3"
      - "ADM1_PCODE"
    input_cols:
      - "NUMPOINTS"
    output_cols:
      - "NoHealthFacilities"
    output_hxltags:
      - "#loc+count+health"
  worldhealthorg:
    source: "WHO"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRfjaIXE1hvEIXD66g6cuCbPrGdZkx6vLIgXO_znVbjQ-OgwfaI1kJPhxhgjw2Yg08CmtBuMLAZkTnu/pub?gid=337443769&single=true&output=csv"
    format: "csv"
    adm_cols:
      - "iso"
      - "Admin1"
    date_col: "Year"
    date_type: "year"
    filter_cols:
      - "Vaccine"
    subsets:
      - filter: "Vaccine == 'HepB1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "HepB1 Coverage"
        output_hxltags:
          - "#population+hepb1+pct+vaccinated"
      - filter: "Vaccine == 'HepB2'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "HepB2 Coverage"
        output_hxltags:
          - "#population+hepb2+pct+vaccinated"
      - filter: "Vaccine == 'HepB3'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "HepB3 Coverage"
        output_hxltags:
          - "#population+hepb3+pct+vaccinated"
      - filter: "Vaccine == 'IPV1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "IPV1 Coverage"
        output_hxltags:
          - "#population+ipv1+pct+vaccinated"
      - filter: "Vaccine == 'MCV1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "MCV1 Coverage"
        output_hxltags:
          - "#population+mcv1+pct+vaccinated"
      - filter: "Vaccine == 'MCV2'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "MCV2 Coverage"
        output_hxltags:
          - "#population+mcv2+pct+vaccinated"
      - filter: "Vaccine == 'Pol1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "Pol1 Coverage"
        output_hxltags:
          - "#population+pct+pol1+vaccinated"
      - filter: "Vaccine == 'Pol2'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "Pol2 Coverage"
        output_hxltags:
          - "#population+pct+pol2+vaccinated"
      - filter: "Vaccine == 'Pol3'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "Pol3 Coverage"
        output_hxltags:
          - "#population+pct+pol3+vaccinated"
  gam:
    dataset: "world-global-expanded-database-on-severe-wasting"
    format: "xlsx"
    sheet: "Trend"
    headers:
      - 3
      - 4
    flatten:
      - original: "Region {{1}} Region Name"
        new: "Region Name"
      - original: "Region {{1}} Point Estimate"
        new: "Region Point Estimate"
    adm_cols:
      - "ISO"
      - "Region Name"
    date_col: "Year*"
    date_type: "year"
    input_cols:
      - "Region Point Estimate"
    input_transforms:
      "Region Point Estimate": "number_format(Region Point Estimate, trailing_zeros=False)"
    output_cols:
      - "Malnutrition Estimate"
    output_hxltags:
      - "#severity+malnutrition+num+subnational"

whowhatwhere:
  source: "OCHA"
  url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRt_YtlKjmZLhAq5GDA05fmfnMbA_4SL32fWtH6PttLxpWZMuv1KeeoAW69d_P1If3pggf6_XRGXeuQ/pub?gid=1662282962&single=true&output=csv"

iom_dtm:
  source: "IOM"
  url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSnUZoKtEvfchPq-zonhd1-DAujIzo0u68vX_BlUvex43Seyc881kNE89xQp7KAolXmxX-aq3aPCl-x/pub?gid=0&single=true&output=csv"

countries:
  - ARE
  - BHR
  - COM
  - DJI
  - DZA
  - EGY
  - IRQ
  - JOR
  - KWT
  - LBN
  - LBY
  - MAR
  - MRT
  - OMN
  - PSE
  - QAT
  - SAU
  - SDN
  - SOM
  - SYR
  - TUN
  - YEM

country_name_overrides:
  PSE: "oPt"

country_name_mappings:

admin1_info:
  - {country: Iraq, iso3: IRQ, pcode: IQG01, name: Al Anbar}
  - {country: Iraq, iso3: IRQ, pcode: IQG02, name: Al Basrah}
  - {country: Iraq, iso3: IRQ, pcode: IQG03, name: Al Muthanna}
  - {country: Iraq, iso3: IRQ, pcode: IQG04, name: Al Najaf}
  - {country: Iraq, iso3: IRQ, pcode: IQG05, name: Al Qadissiya}
  - {country: Iraq, iso3: IRQ, pcode: IQG06, name: Al Sulaymaniyah}
  - {country: Iraq, iso3: IRQ, pcode: IQG07, name: Babil}
  - {country: Iraq, iso3: IRQ, pcode: IQG08, name: Baghdad}
  - {country: Iraq, iso3: IRQ, pcode: IQG10, name: Diyala}
  - {country: Iraq, iso3: IRQ, pcode: IQG09, name: Duhok}
  - {country: Iraq, iso3: IRQ, pcode: IQG11, name: Erbil}
  - {country: Iraq, iso3: IRQ, pcode: IQG12, name: Kerbala}
  - {country: Iraq, iso3: IRQ, pcode: IQG13, name: Kirkuk}
  - {country: Iraq, iso3: IRQ, pcode: IQG14, name: Maysan}
  - {country: Iraq, iso3: IRQ, pcode: IQG15, name: Ninewa}
  - {country: Iraq, iso3: IRQ, pcode: IQG16, name: Salah Al Din}
  - {country: Iraq, iso3: IRQ, pcode: IQG17, name: Thi Qar}
  - {country: Iraq, iso3: IRQ, pcode: IQG18, name: Wassit}
  - {country: Libya, iso3: LBY, pcode: LY01, name: East}
  - {country: Libya, iso3: LBY, pcode: LY03, name: South}
  - {country: Libya, iso3: LBY, pcode: LY02, name: West}
  - {country: State of Palestine, iso3: PSE, pcode: PS1, name: Gaza Strip}
  - {country: State of Palestine, iso3: PSE, pcode: PS2, name: No Mans Land}
  - {country: State of Palestine, iso3: PSE, pcode: PS3, name: West Bank}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY08, name: Al Hasakeh}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY02, name: Aleppo}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY11, name: Ar Raqqa}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY13, name: As Sweida}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY01, name: Damascus}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY12, name: Dara}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY09, name: Deir Ez Zor}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY05, name: Hama}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY04, name: Homs}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY07, name: Idleb}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY06, name: Lattakia}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY14, name: Quneitra}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY03, name: Rural Damascus}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY10, name: Tartous}
  - {country: Yemen, iso3: YEM, pcode: YE12, name: Abyan}
  - {country: Yemen, iso3: YEM, pcode: YE30, name: Ad Dali}
  - {country: Yemen, iso3: YEM, pcode: YE24, name: Aden}
  - {country: Yemen, iso3: YEM, pcode: YE14, name: Al Bayda}
  - {country: Yemen, iso3: YEM, pcode: YE18, name: Al Hodeidah}
  - {country: Yemen, iso3: YEM, pcode: YE16, name: Al Jawf}
  - {country: Yemen, iso3: YEM, pcode: YE28, name: Al Maharah}
  - {country: Yemen, iso3: YEM, pcode: YE27, name: Al Mahwit}
  - {country: Yemen, iso3: YEM, pcode: YE29, name: Amran}
  - {country: Yemen, iso3: YEM, pcode: YE20, name: Dhamar}
  - {country: Yemen, iso3: YEM, pcode: YE19, name: Hadramawt}
  - {country: Yemen, iso3: YEM, pcode: YE17, name: Hajjah}
  - {country: Yemen, iso3: YEM, pcode: YE11, name: Ibb}
  - {country: Yemen, iso3: YEM, pcode: YE25, name: Lahj}
  - {country: Yemen, iso3: YEM, pcode: YE26, name: Marib}
  - {country: Yemen, iso3: YEM, pcode: YE31, name: Raymah}
  - {country: Yemen, iso3: YEM, pcode: YE22, name: Sadah}
  - {country: Yemen, iso3: YEM, pcode: YE23, name: Sanaa}
  - {country: Yemen, iso3: YEM, pcode: YE13, name: Sanaa City}
  - {country: Yemen, iso3: YEM, pcode: YE21, name: Shabwah}
  - {country: Yemen, iso3: YEM, pcode: YE32, name: Socotra}
  - {country: Yemen, iso3: YEM, pcode: YE15, name: Taiz}

admin1_name_mappings:
  "MUTHANA": "IQG03"
  "Hasaka": "SY08"
  "Hassake": "SY08"
  "al-raka": "SY11"
  "al-amana": "YE23"
  "Amanat Al Asimah / أمانة العاصمة": "YE13"
  "Amanat Al Asimah": "YE13"
  "Rural-Dam": "SY03"
  "al-qunitara": "SY14"
  "Sana'a Govt.": "YE23"

admin1_name_replacements:
  " urban": ""
  "sud": "south"
  "ouest": "west"
  "est": "east"
  "nord": "north"
  "'": ""
  "/": " "
  ".": " "
  " region": ""

admin1_fuzzy_dont:
  - "nord"
  - "north"
  - "sud"
  - "south"
  - "est"
  - "east"
  - "ouest"
  - "west"
  - "syria"

tabs:
  allregions: "AllRegionsData"
  regional_reqfund: "RegionalReqFund"
  regional: "RegionalData"
  national: "NationalData"
  subnational: "SubnationalData"
  covid_series: "CovidSeries"
  covid_trend: "CovidTrend"
  sources: "Sources"


googlesheets:
  prod: "https://docs.google.com/spreadsheets/d/1FFuz0U5akRhrjg2cQZ7SYZkGLvRmvuSrDCa4SyeU-X0/edit#gid=0"
  scratch: "https://docs.google.com/spreadsheets/d/1h7m7nOLaRnNEKNBXqRCG7x54SnEz_oYHbuht8h1VF6E/edit#gid=0"

json:
  output: "all.json"

additional_sources:
  - indicator: "#food-prices"
    dataset: "global-wfp-food-prices"
  - indicator: "#vaccination-campaigns"
    dataset: "immunization-campaigns-impacted"
  - indicator: "#access-data"
    source: "Multiple sources"
    force_date_today: True
    source_url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=1565063847&single=true&output=csv"
  - indicator: "#affected+infected+sex+new+avg+per100000"
    source: "Multiple sources"
    force_date_today: True
    source_url: "https://data.humdata.org/search?q=((organization:world-health-organization%20AND%20notes:Coronavirus)%20OR%20organization:global-health-50-50)"
  - indicator: "#affected+food+p3plus+num"
    source: "Multiple sources"
    force_date_today: True
    source_url: "https://data.humdata.org/search?q=(name:ipc-country-data%20OR%20name:cadre-harmonise)"

# national
scraper_national:
  population:
    source: "WorldPop"
    source_url: "https://data.humdata.org/search?organization=worldpop&q=%22population%20counts%22"
    url: "https://api.worldbank.org/v2/en/indicator/SP.POP.TOTL?downloadformat=excel&dataformat=list"
    format: "xls"
    sheet: "Data"
    headers: 3
    prefilter: "Value is not None"
    admin:
      - "Country Code"
    date: "Year"
    date_type: "year"
    input:
      - "Value"
    output:
      - "Population"
    output_hxl:
      - "#population"
  economicindex:
    dataset: "covid-19-economic-exposure-index"
    format: "xlsx"
    sheet: "economic exposure"
    admin:
      - "Country"
    input:
      - "Covid 19 Economic exposure index"
    transform:
      "Covid 19 Economic exposure index": "number_format(Covid 19 Economic exposure index, trailing_zeros=False)"
    output:
      - "EconomicExposure"
    output_hxl:
      - "#severity+economic+num"
  gam:
    dataset: "world-global-expanded-database-on-severe-wasting"
    format: "xlsx"
    sheet: "Trend"
    headers:
      - 3
      - 4
    admin:
      - "ISO"
    date: "Year*"
    date_type: "year"
    input:
      - "National Point Estimate"
    transform:
      "National Point Estimate": "number_format(National Point Estimate, trailing_zeros=False)"
    output:
      - "Malnutrition Estimate"
    output_hxl:
      - "#severity+malnutrition+num+national"
  inneed:
    dataset: "interagency-response-plans"
    format: "csv"
    use_hxl: True
    input:
      - "#inneed"
    output:
      - "PeopleInNeed"
    output_hxl:
      - "#affected+inneed"
  idps:
    dataset: "idmc-internally-displaced-persons-idps"
    format: "csv"
    use_hxl: True
    date: "#date+year"
    date_type: "year"
    input:
      - "#affected+idps+ind+stock+conflict"
      - "#affected+idps+ind+stock+disaster"
    transform:
      "#affected+idps+ind+stock+conflict": "int(#affected+idps+ind+stock+conflict) if #affected+idps+ind+stock+conflict else 0"
      "#affected+idps+ind+stock+disaster": "int(#affected+idps+ind+stock+disaster) if #affected+idps+ind+stock+disaster else 0"
    process:
      - "#affected+idps+ind+stock+conflict + #affected+idps+ind+stock+disaster"
    output:
      - "TotalIDPs"
    output_hxl:
      - "#affected+displaced"
  travel:
    dataset: "covid-19-global-travel-restrictions-and-airline-information"
    format: "csv"
    admin:
      - "iso3"
    input:
      - "info"
      - "published"
    input_append:
      - "info"
    input_keep:
      - "published"
    output:
      - "TravelRestrictions"
      - "TravelRestrictionsPublished"
    output_hxl:
      - "#severity+travel"
      - "#severity+date+travel"
  allocations:
    dataset:
      "#value+cbpf+funding+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gmempty+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm0+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm1+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm2+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm3+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm4+total+usd": "cbpf-allocations-and-contributions"
      "default_dataset": "cerf-allocations"
    url: "https://cbpfgms.github.io/pfbi-data/download/full_pfmb_allocations.csv"
    format: "csv"
    sort:
      reverse: True
      keys:
        - "AllocationYear"
    date: "AllocationYear"
    date_type: "year"
    single_maxdate: True
    admin:
      - "CountryCode"
    filter_cols:
      - "FundType"
      - "GenderMarker"
    subsets:
      - filter: "FundType == 'CBPF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CBPFFunding"
        output_hxl:
          - "#value+cbpf+funding+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker is None"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CBPFFundingGMEmpty"
        output_hxl:
          - "#value+cbpf+funding+gmempty+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '0'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CBPFFundingGM0"
        output_hxl:
          - "#value+cbpf+funding+gm0+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '1'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CBPFFundingGM1"
        output_hxl:
          - "#value+cbpf+funding+gm1+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '2'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CBPFFundingGM2"
        output_hxl:
          - "#value+cbpf+funding+gm2+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '3'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CBPFFundingGM3"
        output_hxl:
          - "#value+cbpf+funding+gm3+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '4'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CBPFFundingGM4"
        output_hxl:
          - "#value+cbpf+funding+gm4+total+usd"
      - filter: "FundType == 'CERF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CERFFunding"
        output_hxl:
          - "#value+cerf+funding+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker is None"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CERFFundingGMEmpty"
        output_hxl:
          - "#value+cerf+funding+gmempty+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '0'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CERFFundingGM0"
        output_hxl:
          - "#value+cerf+funding+gm0+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '1'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CERFFundingGM1"
        output_hxl:
          - "#value+cerf+funding+gm1+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '2'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CERFFundingGM2"
        output_hxl:
          - "#value+cerf+funding+gm2+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '3'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CERFFundingGM3"
        output_hxl:
          - "#value+cerf+funding+gm3+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '4'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
        output:
          - "CERFFundingGM4"
        output_hxl:
          - "#value+cerf+funding+gm4+total+usd"
  sadd:
    dataset: "covid-19-sex-disaggregated-data-tracker"
    format: "csv"
# No longer needed
#    external_filter:
      # Editable link https://docs.google.com/spreadsheets/d/1KReA4uWurU7KXHDaSrEcR7hUTUFuDKO-nZviZyaNdPI/edit#gid=434885896
#      url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vR9PhPG7-aH0EkaBGzXYlrO9252gqs-UuKIeDQr9D3pOLBOdQ_AoSwWi21msHsdyT7thnjuhSY6ykSX/pub?gid=434885896&single=true&output=csv"
#      hxl:
#        - "#country+code+v_iso2"
    admin:
      - "country_code"
    input:
      - "cases_male_pct"
      - "cases_female_pct"
      - "deaths_male_pct"
      - "deaths_female_pct"
    transform:
      "cases_male_pct": "number_format(get_numeric_if_possible(cases_male_pct), trailing_zeros=False)"
      "cases_female_pct": "number_format(get_numeric_if_possible(cases_female_pct), trailing_zeros=False)"
      "deaths_male_pct": "number_format(get_numeric_if_possible(deaths_male_pct), trailing_zeros=False)"
      "deaths_female_pct": "number_format(get_numeric_if_possible(deaths_female_pct), trailing_zeros=False)"
    output:
      - "Cases (% male)"
      - "Cases (% female)"
      - "Deaths (% male)"
      - "Deaths (% female)"
    output_hxl:
      - "#affected+infected+m+pct"
      - "#affected+f+infected+pct"
      - "#affected+killed+m+pct"
      - "#affected+f+killed+pct"
  oxcgrt:
    dataset: "oxford-covid-19-government-response-tracker"
    format: "csv"
    use_hxl: True
    date: "#date"
    date_type: "date"
  covidtests:
    dataset: "total-covid-19-tests-performed-by-country"
    format: "xlsx"
    prefilter: "new_tests is not None and new_tests > 0"
    date: "date"
    date_type: "date"
    admin:
      - "iso_code"
    input:
      - "new_tests"
      - "new_tests_per_thousand"
      - "new_tests_smoothed_per_thousand"
      - "positive_rate"
    output:
      - "New Tests"
      - "New Tests Per Thousand"
      - "New Tests Per Thousand (7-day)"
      - "Positive Test Rate"
    output_hxl:
      - "#affected+tested"
      - "#affected+tested+per1000"
      - "#affected+tested+avg+per1000"
      - "#affected+tested+positive+pct"
  cadre_harmonise:
    dataset: "cadre-harmonise"
    format: "xlsx"
    prefilter: "chtype == 'current'"
    sort:
      reverse: True
      keys:
        - "reference_year"
        - "reference_code"
    admin:
      - "adm0_pcod3"
    date:
      - "reference_year"
      - "reference_code"
    date_type: "int"
    filter_cols:
      - "chtype"
    input:
      - "phase3"
      - "phase4"
      - "phase5"
      - "phase35"
      - "population"
    input_ignore_vals:
      - "-"
    transform:
      "phase3": "get_numeric_if_possible(phase3)"
      "phase4": "get_numeric_if_possible(phase4)"
      "phase5": "get_numeric_if_possible(phase5)"
      "phase35": "get_numeric_if_possible(phase35)"
      "population": "get_numeric_if_possible(population)"
    sum:
      - formula: "phase3"
      - formula: "phase4"
      - formula: "phase5"
      - formula: "phase35"
      - formula: "population"
    output:
      - "FoodInsecurityCHP3"
      - "FoodInsecurityCHP4"
      - "FoodInsecurityCHP5"
      - "FoodInsecurityCHP3+"
      - "FoodInsecurityCHAnalysed"
    output_hxl:
      - "#affected+ch+food+p3+num"
      - "#affected+ch+food+p4+num"
      - "#affected+ch+food+p5+num"
      - "#affected+ch+food+p3plus+num"
      - "#affected+ch+food+analysed+num"
  access:
    source:
      "#access+visas+pct": "OCHA"
      "#access+travel+pct": "OCHA"
      "#event+year+previous+num": "Aid Workers Database"
      "#event+year+todate+num": "Aid Workers Database"
      "#event+year+previous+todate+num": "Aid Workers Database"
      "#activity+cerf+project+insecurity+pct": "OCHA"
      "#activity+cbpf+project+insecurity+pct": "OCHA"
      "#population+education": "UNESCO"
      "default_source": "Multiple sources"
    source_url:
      "#event+year+previous+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+previous+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "default_url": "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=1565063847&single=true&output=csv"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=574237756&single=true&output=csv"
    format: "csv"
    use_hxl: True
    transform:
      "#access+visas+pct": "get_numeric_if_possible(#access+visas+pct)"
      "#access+travel+pct": "get_numeric_if_possible(#access+travel+pct)"
      "#activity+cerf+project+insecurity+pct": "get_numeric_if_possible(#activity+cerf+project+insecurity+pct)"
      "#activity+cbpf+project+insecurity+pct": "get_numeric_if_possible(#activity+cbpf+project+insecurity+pct)"
      "#population+education": "get_numeric_if_possible(#population+education)"
  unicef_sam:
    dataset: "number-of-admissions-for-treatment-of-severe-acute-malnutrition-sam"
    format: "csv"
    use_hxl: True
    admin:
      - "#country+code"
    date: "#date"
    date_type: "date"
    use_date: True
    input:
      - "#affected+reached"
    output:
      - "NoChildrenSAM"
    output_hxl:
      - "#affected+children+sam"
  covax:
    dataset: "covid-19-vaccine-doses-in-hrp-countries"
    format: "csv"
    use_hxl: True
    admin:
      - "#country+code"
    input:
      - "#capacity+covax+delivered+doses"
      - "#capacity+others+delivered+doses"
      - "#capacity+delivered+total"
      - "#capacity+coverage+one_dose"
      - "#meta+source_country"
    input_ignore_vals:
      - "N/A"
    transform:
      "#capacity+covax+delivered+doses": "get_numeric_if_possible(#capacity+covax+delivered+doses)"
      "#capacity+others+delivered+doses": "get_numeric_if_possible(#capacity+others+delivered+doses)"
      "#capacity+delivered+total": "get_numeric_if_possible(#capacity+delivered+total)"
      "#capacity+coverage+one_dose": "number_format(get_numeric_if_possible(#capacity+coverage+one_dose), trailing_zeros=False)"
    output:
      - "Covax Delivered Doses"
      - "Other Delivered Doses"
      - "Total Delivered Doses"
      - "Population % covered by delivered doses"
      - "Source country for doses"
    output_hxl:
      - "#capacity+doses+delivered+covax"
      - "#capacity+doses+delivered+others"
      - "#capacity+doses+delivered+total"
      - "#targeted+doses+delivered+pct"
      - "#meta+source+doses+country+name"
  ourworldindata:
    dataset: "covid-19-vaccinations"
    format: "csv"
    use_hxl: True
    external_filter:
      url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vTVzu79PPTfaA2syevOQfyRRjy63dJWitqu0fFbXIQCzoUn9K9TiMWMRvFGg1RBsnLmgYugzSEiAye2/pub?gid=992438980&single=true&output=csv"
      hxl:
       - "#country+code"
    prefilter: "#total+vaccinations is not None"
    admin:
      - "#country+code"
    date: "#date"
    date_type: "date"
    input:
      - "#total+vaccinations"
    output:
      - "TotalDosesAdministered"
    output_hxl:
      - "#capacity+doses+administered+total"
  worldbank:
    dataset: "harmonized-covid-19-household-monitoring-surveys"
    format: "xlsx"
    sheet: "2. Harmonized Indicators"
    admin:
      - "code"
    date:
      - "year"
      - "month"
    date_type: "int"
    filter_cols:
      - "indicator"
      - "urban_rural"
      - "industry"
    subsets:
      - filter: "indicator == 'Safe_anysource' and urban_rural == 'National' and industry == 'All'"
        input:
          - "indicator_val"
        transform:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output:
          - "ReceivedAssistance"
        output_hxl:
          - "#targeted+assist+hh+pct"
      - filter: "indicator == 'FS_skipmeal' and urban_rural == 'National' and industry == 'All'"
        input:
          - "indicator_val"
        transform:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output:
          - "SkippedMeals"
        output_hxl:
          - "#affected+skip_meals+hh+pct"
      - filter: "indicator == 'Labo_stop' and urban_rural == 'National' and industry == 'All'"
        input:
          - "indicator_val"
        transform:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output:
          - "StoppedWorking"
        output_hxl:
          - "#affected+stop_working+hh+pct"
      - filter: "indicator == 'Copi_reduce' and urban_rural == 'National' and industry == 'All'"
        input:
          - "indicator_val"
        transform:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output:
          - "ReducedConsumption"
        output_hxl:
          - "#affected+less_consumption+hh+pct"
      - filter: "indicator == 'Inco_WachangenLD' and urban_rural == 'National' and industry == 'All'"
        input:
          - "indicator_val"
        transform:
          "indicator_val": "get_fraction_str(indicator_val, 100, trailing_zeros=False)"
        output:
          - "DecreasedWages"
        output_hxl:
          - "#affected+less_wages+hh+pct"
  covax_allocations:
    dataset: "covax-round-6-allocations"
    format: "csv"
    headers: 2
    admin:
      - "ISO3"
    input:
      - "Total to date"
    transform:
      "Total to date": "get_numeric_if_possible(Total to date)"
    output:
      - "DosesAllocated"
    output_hxl:
      - "#capacity+doses+forecast+covax"
  food_basket:
    dataset: "cost-of-the-food-basket"
    url: "https://wfp.sharepoint.com/:x:/s/EconomicMarketAnalysis/EVeSfcSQAvtGtAE3aseaNHoB5uENuNW4anaJ84ryqQI8Qw?download=1"
    format: "csv"
    prefilter: "MMFPSNDataLevel.strip() == 'National' and MMFPSNTotImpactQuarterlyChange is not None"
    sort:
      reverse: True
      keys:
        - "MMFPSNDate"
    admin:
      - "CountryName"
    date: "MMFPSNDate"
    date_type: "date"
    single_maxdate: True
    filter_cols:
      - "MMFPSNDataLevel"
      - "MMFPSNTotImpactQuarterlyChange"
    input:
      - "MMFPSNTotImpactQuarterlyChange"
    transform:
      "MMFPSNTotImpactQuarterlyChange": "get_fraction_str(MMFPSNTotImpactQuarterlyChange, 100, trailing_zeros=False)"
    output:
      - "ChangeInFoodBasketCost"
    output_hxl:
      - "#indicator+foodbasket+change+pct"
  financing:
    dataset: "world-bank-and-gavi-vaccine-financing"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSSKfpC4IaUs9iWc7TSrOoPNuR7cJ4civ8csvt8S_RcCXVG7xNxcyQ8Z-vSnJZ_lXYOTGlLh6Vnmn1Y/pub?gid=0&single=true&output=csv"
    format: "csv"
    admin:
      - "ISO3"
    input:
      - "Amount ($m)"
      - "GAVI CDS (early access) Approved"
      - "GAVI CDS (needs based) Approved"
      - "GAVI CDS (early access) Disbursed"
      - "GAVI CDS (needs based) Disbursed"
      - "TOTAL (WB+GAVI) ($m)"
    input_ignore_vals:
      - "#REF!"
    transform:
      "Amount ($m)": "get_numeric_if_possible(Amount ($m))"
      "GAVI CDS (early access) Approved": "get_numeric_if_possible(GAVI CDS (early access) Approved)"
      "GAVI CDS (needs based) Approved": "get_numeric_if_possible(GAVI CDS (needs based) Approved)"
      "GAVI CDS (early access) Disbursed": "get_numeric_if_possible(GAVI CDS (early access) Disbursed)"
      "GAVI CDS (needs based) Disbursed": "get_numeric_if_possible(GAVI CDS (needs based) Disbursed)"
      "TOTAL (WB+GAVI) ($m)": "get_numeric_if_possible(TOTAL (WB+GAVI) ($m))"
    sum:
      - formula: "Amount ($m)"
      - formula: "GAVI CDS (early access) Approved"
      - formula: "GAVI CDS (needs based) Approved"
      - formula: "GAVI CDS (early access) Disbursed"
      - formula: "GAVI CDS (needs based) Disbursed"
      - formula: "TOTAL (WB+GAVI) ($m)"
    output:
      - "WorldBankFinancingApproved"
      - "GAVICDSEarlyAccessApproved"
      - "GAVICDSNeedsApproved"
      - "GAVICDSEarlyAccessDisbursed"
      - "GAVICDSNeedsDisbursed"
      - "WorldBankGAVIFinancingTotal"
    output_hxl:
      - "#value+financing+worldbank+approved"
      - "#value+financing+gavi+earlyaccess+approved"
      - "#value+financing+gavi+needs+approved"
      - "#value+financing+gavi+earlyaccess+disbursed"
      - "#value+financing+gavi+needs+disbursed"
      - "#value+financing+approved"
  closure_duration:
    dataset: "global-school-closures-covid19"
    format: "xlsx"
    admin:
      - "Country"
    input:
      - "Duration of FULL and PARTIAL school closures (in weeks)"
    output:
      - "Full Partial Closure Duration"
    output_hxl:
      - "#impact+full_partial+weeks"

unhcr_myanmar_idps:
  url: "https://data.unhcr.org/population/?widget_id=264111&geo_id=693&population_group=5407,4999"

fts:
  source: "OCHA"
  source_url: "https://data.humdata.org/dataset/covid-19-data-visual-inputs"
  url: "https://api.hpc.tools/v"

food_prices:
  dataset: "global-wfp-food-prices"
  base_url: "https://api.wfp.org"
  format: "csv"

vaccination_campaigns:
  dataset: "immunization-campaigns-impacted"
  format: "csv"

unhcr:
  source: "UNHCR"
  source_url: "https://data.humdata.org/organization/unhcr"
  url: "https://data.unhcr.org/population/?population_collection=%d&geo_id=%s"
  population_collections:
    - 4
    - 28
    - 29
    - 71
  exclude:
    - "VEN"

inform:
  dataset: "inform-global-crisis-severity-index"
  url: "https://api.acaps.org/api/v1/inform-severity-index/%s/?page=1"
  format: "xlsx"

who_covid:
  dataset: "coronavirus-covid-19-cases-and-deaths"
  format: "csv"

covax_deliveries:
  dataset: "covid-19-vaccine-doses-in-hrp-countries"
  format: "csv"
  url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vTVzu79PPTfaA2syevOQfyRRjy63dJWitqu0fFbXIQCzoUn9K9TiMWMRvFGg1RBsnLmgYugzSEiAye2/pub?gid=1635331605&single=true&output=csv"

education_closures:
  dataset: "global-school-closures-covid19"
  resource: "School Closures"
  format: "csv"

education_enrolment:
  dataset: "global-school-closures-covid19"
  resource: "Enrollment data"
  format: "xlsx"

regional:
  dataset: "unocha-office-locations"
  format: "xlsx"
  iso3_header: "ISO3"
  region_header: "Regional_office"
  toplevel_region: "ALL"
  ignore:
    - "NO COVERAGE"

  aggregate:
    "#population":
      action: "sum"
    "#affected+infected":
      action: "sum"
    "#affected+killed":
      action: "sum"
    "#affected+inneed":
      action: "sum"
    "#value+cbpf+funding+total+usd":
      action: "sum"
    "#value+cbpf+funding+gmempty+total+usd":
      action: "sum"
    "#value+cbpf+funding+gm0+total+usd":
      action: "sum"
    "#value+cbpf+funding+gm1+total+usd":
      action: "sum"
    "#value+cbpf+funding+gm2+total+usd":
      action: "sum"
    "#value+cbpf+funding+gm3+total+usd":
      action: "sum"
    "#value+cbpf+funding+gm4+total+usd":
      action: "sum"
    "#value+cerf+funding+total+usd":
      action: "sum"
    "#value+cerf+funding+gmempty+total+usd":
      action: "sum"
    "#value+cerf+funding+gm0+total+usd":
      action: "sum"
    "#value+cerf+funding+gm1+total+usd":
      action: "sum"
    "#value+cerf+funding+gm2+total+usd":
      action: "sum"
    "#value+cerf+funding+gm3+total+usd":
      action: "sum"
    "#value+cerf+funding+gm4+total+usd":
      action: "sum"
    "#value+funding+hrp+required+usd":
      output: "RequiredFunding"
      action: "sum"
    "#value+funding+hrp+total+usd":
      output: "Funding"
      action: "sum"
    "#value+funding+hrp+pct":
      output: "PercentFunded"
      action: "eval"
      formula: "get_fraction_str(#value+funding+hrp+total+usd, #value+funding+hrp+required+usd) if #value+funding+hrp+total+usd is not None and #value+funding+hrp+required+usd is not None else ''"
    "#access+visas+pct":
      action: "mean"
    "#access+travel+pct":
      action: "mean"
    "#event+year+todate+num":
      action: "sum"
    "#activity+cerf+project+insecurity+pct":
      action: "mean"
    "#activity+cbpf+project+insecurity+pct":
      action: "mean"
    "#vaccination+postponed+num":
      action: "sum"
    "#capacity+doses+delivered+covax":
      action: "sum"
    "#capacity+doses+delivered+others":
      action: "sum"
    "#capacity+doses+delivered+total":
      action: "sum"
    "#capacity+doses+administered+total":
      action: "sum"
    "#affected+children+sam":
      action: "sum"
    "#capacity+doses+forecast+covax":
      action: "sum"
    "#value+financing+worldbank+approved":
      action: "sum"
    "#value+financing+gavi+earlyaccess+approved":
      action: "sum"
    "#value+financing+gavi+needs+approved":
      action: "sum"
    "#value+financing+gavi+earlyaccess+disbursed":
      action: "sum"
    "#value+financing+gavi+needs+disbursed":
      action: "sum"
    "#value+financing+approved":
      action: "sum"
    "#affected+food+ipc+p3plus+num":
      output: "FoodInsecurityP3+"
      action: "sum"
      input:
        - "#affected+ch+food+p3plus+num"
        - "#affected+food+ipc+p3plus+num"

scraper_allregions: {}
#  inneed_numcountries:
#    dataset: "interagency-response-plans"
#    format: "csv"
#    use_hxl: True
#    prefilter: "#meta+included == 'TRUE'"
#    find_tags: True
#    input:
#      - "#meta+included"
#    transform:
#      "#meta+included": "1"
#    sum:
#      - formula: "#meta+included"
#    output:
#      - "NumCountriesInNeed"
#    output_hxl:
#      - "#meta+countries+inneed+num"


# subnational
ipc:
  dataset: "ipc-country-data"
  url: "https://api.ipcinfo.org"

scraper_subnational:
  population:
    source: "WorldPop/UNFPA"
    source_url: "https://data.humdata.org/search?organization=worldpop&q=%22population%20counts%22"
    dataset: "admin-1-population-statistics-for-data-explorers"
    format: "csv"
    admin:
      - "alpha_3"
      - "ADM1_PCODE"
    input:
      - "Population"
    transform:
      "Population": "get_numeric_if_possible(Population)"
    output:
      - "Population"
    output_hxl:
      - "#population"
  cadre_harmonise:
    dataset: "cadre-harmonise"
    format: "xlsx"
    prefilter: "chtype == 'current'"
    sort:
      reverse: True
      keys:
        - "reference_year"
        - "reference_code"
    admin:
      - "adm0_pcod3"
      - - "adm1_pcod2"
#        - "adm1_pcod3"
        - "adm1_name"
    date:
      - "reference_year"
      - "reference_code"
    date_type: "int"
    filter_cols:
      - "chtype"
    input:
      - "phase3"
      - "phase4"
      - "phase5"
      - "phase35"
      - "population"
    input_ignore_vals:
      - "-"
    transform:
      "phase3": "get_numeric_if_possible(phase3)"
      "phase4": "get_numeric_if_possible(phase4)"
      "phase5": "get_numeric_if_possible(phase5)"
      "phase35": "get_numeric_if_possible(phase35)"
      "population": "get_numeric_if_possible(population)"
    sum:
      - formula: "phase3"
      - formula: "phase4"
      - formula: "phase5"
      - formula: "phase35"
      - formula: "population"
    output:
      - "FoodInsecurityCHP3"
      - "FoodInsecurityCHP4"
      - "FoodInsecurityCHP5"
      - "FoodInsecurityCHP3+"
      - "FoodInsecurityCHAnalysed"
    output_hxl:
      - "#affected+ch+food+p3+num"
      - "#affected+ch+food+p4+num"
      - "#affected+ch+food+p5+num"
      - "#affected+ch+food+p3plus+num"
      - "#affected+ch+food+analysed+num"
  healthfac:
    source: "HOT"
    dataset: "admin-1-health-facilities-for-data-explorers"
    format: "csv"
    admin:
      - "alpha_3"
      - "ADM1_PCODE"
    input:
      - "Health_Facilities"
    transform:
      "Health_Facilities": "get_numeric_if_possible(Health_Facilities)"
    output:
      - "NoHealthFacilities"
    output_hxl:
      - "#loc+count+health"
  worldhealthorg:
    source: "WHO"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRfjaIXE1hvEIXD66g6cuCbPrGdZkx6vLIgXO_znVbjQ-OgwfaI1kJPhxhgjw2Yg08CmtBuMLAZkTnu/pub?gid=337443769&single=true&output=csv"
    format: "csv"
    admin:
      - "iso"
      - "Admin1"
    date: "Year"
    date_type: "year"
    filter_cols:
      - "Vaccine"
    subsets:
      - filter: "Vaccine == 'HepB1'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "HepB1 Coverage"
        output_hxl:
          - "#population+hepb1+pct+vaccinated"
      - filter: "Vaccine == 'HepB2'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "HepB2 Coverage"
        output_hxl:
          - "#population+hepb2+pct+vaccinated"
      - filter: "Vaccine == 'HepB3'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "HepB3 Coverage"
        output_hxl:
          - "#population+hepb3+pct+vaccinated"
      - filter: "Vaccine == 'IPV1'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "IPV1 Coverage"
        output_hxl:
          - "#population+ipv1+pct+vaccinated"
      - filter: "Vaccine == 'MCV1'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "MCV1 Coverage"
        output_hxl:
          - "#population+mcv1+pct+vaccinated"
      - filter: "Vaccine == 'MCV2'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "MCV2 Coverage"
        output_hxl:
          - "#population+mcv2+pct+vaccinated"
      - filter: "Vaccine == 'Pol1'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "Pol1 Coverage"
        output_hxl:
          - "#population+pct+pol1+vaccinated"
      - filter: "Vaccine == 'Pol2'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "Pol2 Coverage"
        output_hxl:
          - "#population+pct+pol2+vaccinated"
      - filter: "Vaccine == 'Pol3'"
        input:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        transform:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output:
          - "Pol3 Coverage"
        output_hxl:
          - "#population+pct+pol3+vaccinated"
  gam:
    dataset: "world-global-expanded-database-on-severe-wasting"
    format: "xlsx"
    sheet: "Trend"
    headers:
      - 3
      - 4
    flatten:
      - original: "Region {{1}} Region Name"
        new: "Region Name"
      - original: "Region {{1}} Point Estimate"
        new: "Region Point Estimate"
    admin:
      - "ISO"
      - "Region Name"
    date: "Year*"
    date_type: "year"
    input:
      - "Region Point Estimate"
    transform:
      "Region Point Estimate": "number_format(Region Point Estimate, trailing_zeros=False)"
    output:
      - "Malnutrition Estimate"
    output_hxl:
      - "#severity+malnutrition+num+subnational"

whowhatwhere:
  source: "OCHA"
  url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSmsGHOwD7qML6aEhR54Zvv7gJVtvRw28aRjVdRUtZaN299zKspcQiFyk4df4Hzi-lkHX1ctCiUTKw-/pub?gid=0&single=true&output=csv"

iom_dtm:
  source: "IOM"
  url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSnUZoKtEvfchPq-zonhd1-DAujIzo0u68vX_BlUvex43Seyc881kNE89xQp7KAolXmxX-aq3aPCl-x/pub?gid=0&single=true&output=csv"

countries:
  - ARE
  - BHR
  - COM
  - DJI
  - DZA
  - EGY
  - IRQ
  - JOR
  - KWT
  - LBN
  - LBY
  - MAR
  - MRT
  - OMN
  - PSE
  - QAT
  - SAU
  - SDN
  - SOM
  - SYR
  - TUN
  - YEM

HRPs:
  - IRQ
  - LBY
  - PSE
  - SOM
  - SDN
  - SYR
  - YEM

country_name_overrides:
  PSE: "oPt"

country_name_mappings:

admin1_info:
  - {country: Algeria, iso3: DZA, pcode: DZ001, name: Adrar}
  - {country: Algeria, iso3: DZA, pcode: DZ002, name: Ain Defla}
  - {country: Algeria, iso3: DZA, pcode: DZ003, name: Ain Temouchent}
  - {country: Algeria, iso3: DZA, pcode: DZ004, name: Alger}
  - {country: Algeria, iso3: DZA, pcode: DZ005, name: Annaba}
  - {country: Algeria, iso3: DZA, pcode: DZ006, name: Batna}
  - {country: Algeria, iso3: DZA, pcode: DZ007, name: Bechar}
  - {country: Algeria, iso3: DZA, pcode: DZ008, name: Bejaia}
  - {country: Algeria, iso3: DZA, pcode: DZ009, name: Biskra}
  - {country: Algeria, iso3: DZA, pcode: DZ010, name: Blida}
  - {country: Algeria, iso3: DZA, pcode: DZ011, name: Bordj Bou Arrer}
  - {country: Algeria, iso3: DZA, pcode: DZ012, name: Bouira}
  - {country: Algeria, iso3: DZA, pcode: DZ013, name: Boumerdes}
  - {country: Algeria, iso3: DZA, pcode: DZ014, name: Chlef}
  - {country: Algeria, iso3: DZA, pcode: DZ015, name: Constantine}
  - {country: Algeria, iso3: DZA, pcode: DZ016, name: Djelfa}
  - {country: Algeria, iso3: DZA, pcode: DZ017, name: El Bayadh}
  - {country: Algeria, iso3: DZA, pcode: DZ018, name: El Oued}
  - {country: Algeria, iso3: DZA, pcode: DZ019, name: El Tarf}
  - {country: Algeria, iso3: DZA, pcode: DZ020, name: Ghardaia}
  - {country: Algeria, iso3: DZA, pcode: DZ021, name: Guelma}
  - {country: Algeria, iso3: DZA, pcode: DZ022, name: Illizi}
  - {country: Algeria, iso3: DZA, pcode: DZ023, name: Jijel}
  - {country: Algeria, iso3: DZA, pcode: DZ024, name: Khenchela}
  - {country: Algeria, iso3: DZA, pcode: DZ025, name: Laghouat}
  - {country: Algeria, iso3: DZA, pcode: DZ030, name: MSila}
  - {country: Algeria, iso3: DZA, pcode: DZ026, name: Mascara}
  - {country: Algeria, iso3: DZA, pcode: DZ027, name: Medea}
  - {country: Algeria, iso3: DZA, pcode: DZ028, name: Mila}
  - {country: Algeria, iso3: DZA, pcode: DZ029, name: Mostaganem}
  - {country: Algeria, iso3: DZA, pcode: DZ031, name: Naama}
  - {country: Algeria, iso3: DZA, pcode: DZ032, name: Oran}
  - {country: Algeria, iso3: DZA, pcode: DZ033, name: Ouargla}
  - {country: Algeria, iso3: DZA, pcode: DZ034, name: Oum El Bouaghi}
  - {country: Algeria, iso3: DZA, pcode: DZ035, name: Relizane}
  - {country: Algeria, iso3: DZA, pcode: DZ036, name: Saida}
  - {country: Algeria, iso3: DZA, pcode: DZ037, name: Setif}
  - {country: Algeria, iso3: DZA, pcode: DZ038, name: Sidi Bel Abbes}
  - {country: Algeria, iso3: DZA, pcode: DZ039, name: Skikda}
  - {country: Algeria, iso3: DZA, pcode: DZ040, name: Souk Ahras}
  - {country: Algeria, iso3: DZA, pcode: DZ041, name: Tamanrasset}
  - {country: Algeria, iso3: DZA, pcode: DZ042, name: Tebessa}
  - {country: Algeria, iso3: DZA, pcode: DZ043, name: Tiaret}
  - {country: Algeria, iso3: DZA, pcode: DZ044, name: Tindouf}
  - {country: Algeria, iso3: DZA, pcode: DZ045, name: Tipaza}
  - {country: Algeria, iso3: DZA, pcode: DZ046, name: Tissemsilt}
  - {country: Algeria, iso3: DZA, pcode: DZ047, name: Tizi Ouzou}
  - {country: Algeria, iso3: DZA, pcode: DZ048, name: Tlemcen}
  - {country: Bahrain, iso3: BHR, pcode: BH13, name: Capital}
  - {country: Bahrain, iso3: BHR, pcode: BH15, name: Muharraq}
  - {country: Bahrain, iso3: BHR, pcode: BH17, name: Northern}
  - {country: Bahrain, iso3: BHR, pcode: BH14, name: Southern}
  - {country: Comoros, iso3: COM, pcode: KM1, name: Anjouan (Ndzouani)}
  - {country: Comoros, iso3: COM, pcode: KM2, name: Grande Comore (Ngazidja)}
  - {country: Comoros, iso3: COM, pcode: KM3, name: Moheli (Mwali)}
  - {country: Djibouti, iso3: DJI, pcode: DJ05, name: Ali Sabeh}
  - {country: Djibouti, iso3: DJI, pcode: DJ03, name: Dilkhil}
  - {country: Djibouti, iso3: DJI, pcode: DJ04, name: Djibouti}
  - {country: Djibouti, iso3: DJI, pcode: DJ01, name: Obock}
  - {country: Djibouti, iso3: DJI, pcode: DJ02, name: Tadjourah}
  - {country: Egypt, iso3: EGY, pcode: EG02, name: Alexandria}
  - {country: Egypt, iso3: EGY, pcode: EG25, name: Assiut}
  - {country: Egypt, iso3: EGY, pcode: EG28, name: Aswan}
  - {country: Egypt, iso3: EGY, pcode: EG18, name: Behera}
  - {country: Egypt, iso3: EGY, pcode: EG22, name: Beni Suef}
  - {country: Egypt, iso3: EGY, pcode: EG01, name: Cairo}
  - {country: Egypt, iso3: EGY, pcode: EG12, name: Dakahlia}
  - {country: Egypt, iso3: EGY, pcode: EG11, name: Damietta}
  - {country: Egypt, iso3: EGY, pcode: EG23, name: Fayoum}
  - {country: Egypt, iso3: EGY, pcode: EG16, name: Gharbia}
  - {country: Egypt, iso3: EGY, pcode: EG21, name: Giza}
  - {country: Egypt, iso3: EGY, pcode: EG19, name: Ismailia}
  - {country: Egypt, iso3: EGY, pcode: EG15, name: Kafr El Shikh}
  - {country: Egypt, iso3: EGY, pcode: EG14, name: Kalyoubia}
  - {country: Egypt, iso3: EGY, pcode: EG29, name: Luxor}
  - {country: Egypt, iso3: EGY, pcode: EG33, name: Matrouh}
  - {country: Egypt, iso3: EGY, pcode: EG24, name: Menia}
  - {country: Egypt, iso3: EGY, pcode: EG17, name: Menoufia}
  - {country: Egypt, iso3: EGY, pcode: EG32, name: New Valley}
  - {country: Egypt, iso3: EGY, pcode: EG34, name: North Sinai}
  - {country: Egypt, iso3: EGY, pcode: EG03, name: Port Said}
  - {country: Egypt, iso3: EGY, pcode: EG27, name: Qena}
  - {country: Egypt, iso3: EGY, pcode: EG31, name: Red Sea}
  - {country: Egypt, iso3: EGY, pcode: EG13, name: Sharkia}
  - {country: Egypt, iso3: EGY, pcode: EG35, name: South Sinai}
  - {country: Egypt, iso3: EGY, pcode: EG04, name: Suez}
  - {country: Egypt, iso3: EGY, pcode: EG26, name: Suhag}
  - {country: Iraq, iso3: IRQ, pcode: IQG01, name: Al Anbar}
  - {country: Iraq, iso3: IRQ, pcode: IQG02, name: Al Basrah}
  - {country: Iraq, iso3: IRQ, pcode: IQG03, name: Al Muthanna}
  - {country: Iraq, iso3: IRQ, pcode: IQG04, name: Al Najaf}
  - {country: Iraq, iso3: IRQ, pcode: IQG05, name: Al Qadissiya}
  - {country: Iraq, iso3: IRQ, pcode: IQG06, name: Al Sulaymaniyah}
  - {country: Iraq, iso3: IRQ, pcode: IQG07, name: Babil}
  - {country: Iraq, iso3: IRQ, pcode: IQG08, name: Baghdad}
  - {country: Iraq, iso3: IRQ, pcode: IQG10, name: Diyala}
  - {country: Iraq, iso3: IRQ, pcode: IQG09, name: Duhok}
  - {country: Iraq, iso3: IRQ, pcode: IQG11, name: Erbil}
  - {country: Iraq, iso3: IRQ, pcode: IQG12, name: Kerbala}
  - {country: Iraq, iso3: IRQ, pcode: IQG13, name: Kirkuk}
  - {country: Iraq, iso3: IRQ, pcode: IQG14, name: Maysan}
  - {country: Iraq, iso3: IRQ, pcode: IQG15, name: Ninewa}
  - {country: Iraq, iso3: IRQ, pcode: IQG16, name: Salah Al Din}
  - {country: Iraq, iso3: IRQ, pcode: IQG17, name: Thi Qar}
  - {country: Iraq, iso3: IRQ, pcode: IQG18, name: Wassit}
  - {country: Jordan, iso3: JOR, pcode: JO01, name: Ajlun}
  - {country: Jordan, iso3: JOR, pcode: JO02, name: Amman}
  - {country: Jordan, iso3: JOR, pcode: JO03, name: Aqaba}
  - {country: Jordan, iso3: JOR, pcode: JO04, name: Balqa}
  - {country: Jordan, iso3: JOR, pcode: JO05, name: Irbid}
  - {country: Jordan, iso3: JOR, pcode: JO06, name: Jarash}
  - {country: Jordan, iso3: JOR, pcode: JO07, name: Karak}
  - {country: Jordan, iso3: JOR, pcode: JO08, name: Madaba}
  - {country: Jordan, iso3: JOR, pcode: JO09, name: Mafraq}
  - {country: Jordan, iso3: JOR, pcode: JO10, name: "Ma'an"}
  - {country: Jordan, iso3: JOR, pcode: JO11, name: Tafilah}
  - {country: Jordan, iso3: JOR, pcode: JO12, name: Zarqa}
  - {country: Kuwait, iso3: KWT, pcode: KW01, name: Al Ahmadi}
  - {country: Kuwait, iso3: KWT, pcode: KW02, name: Al Farwaniyah}
  - {country: Kuwait, iso3: KWT, pcode: KW03, name: Al Jahrah}
  - {country: Kuwait, iso3: KWT, pcode: KW04, name: Al Kuwayt}
  - {country: Kuwait, iso3: KWT, pcode: KW05, name: Hawalli}
  - {country: Kuwait, iso3: KWT, pcode: KW06, name: Mubarak Al Kabeer}
  - {country: Lebanon, iso3: LBN, pcode: LB7, name: Akkar}
  - {country: Lebanon, iso3: LBN, pcode: LB8, name: Baalbek El Hermel}
  - {country: Lebanon, iso3: LBN, pcode: LB1, name: Beirut}
  - {country: Lebanon, iso3: LBN, pcode: LB2, name: Bekaa}
  - {country: Lebanon, iso3: LBN, pcode: LB4, name: El Nabatieh}
  - {country: Lebanon, iso3: LBN, pcode: LB3, name: Mount Lebanon}
  - {country: Lebanon, iso3: LBN, pcode: LB5, name: North}
  - {country: Lebanon, iso3: LBN, pcode: LB6, name: South}
  - {country: Libya, iso3: LBY, pcode: LY01, name: East}
  - {country: Libya, iso3: LBY, pcode: LY03, name: South}
  - {country: Libya, iso3: LBY, pcode: LY02, name: West}
  - {country: Mauritania, iso3: MRT, pcode: MR01, name: Adrar}
  - {country: Mauritania, iso3: MRT, pcode: MR02, name: Assaba}
  - {country: Mauritania, iso3: MRT, pcode: MR03, name: Brakna}
  - {country: Mauritania, iso3: MRT, pcode: MR04, name: Dakhlet Nouadhibou}
  - {country: Mauritania, iso3: MRT, pcode: MR05, name: Gorgol}
  - {country: Mauritania, iso3: MRT, pcode: MR06, name: Guidimakha}
  - {country: Mauritania, iso3: MRT, pcode: MR07, name: Hodh El Chargi}
  - {country: Mauritania, iso3: MRT, pcode: MR08, name: Hodh El Gharbi}
  - {country: Mauritania, iso3: MRT, pcode: MR09, name: Inchiri}
  - {country: Mauritania, iso3: MRT, pcode: MR10, name: Nouakchott}
  - {country: Mauritania, iso3: MRT, pcode: MR11, name: Tagant}
  - {country: Mauritania, iso3: MRT, pcode: MR12, name: Trarza}
  - {country: Mauritania, iso3: MRT, pcode: MR13, name: Tris Zemmour}
  - {country: Morocco, iso3: MAR, pcode: MA001, name: Beni Mellal Khenifra}
  - {country: Morocco, iso3: MAR, pcode: MA002, name: Casablanca Settat}
  - {country: Morocco, iso3: MAR, pcode: MA003, name: Draa Tafilalet}
  - {country: Morocco, iso3: MAR, pcode: MA004, name: Fez Meknes}
  - {country: Morocco, iso3: MAR, pcode: MA005, name: Guelmim Oued Noun}
  - {country: Morocco, iso3: MAR, pcode: MA006, name: Marrakech Safi}
  - {country: Morocco, iso3: MAR, pcode: MA007, name: Oriental}
  - {country: Morocco, iso3: MAR, pcode: MA008, name: Rabat Sale Kenitra}
  - {country: Morocco, iso3: MAR, pcode: MA009, name: Souss Massa}
  - {country: Morocco, iso3: MAR, pcode: MA010, name: Tangier Tetouan Al Hoceima}
  - {country: Oman, iso3: OMN, pcode: OM01, name: Ad Dakhliyah}
  - {country: Oman, iso3: OMN, pcode: OM02, name: Al Batinah North}
  - {country: Oman, iso3: OMN, pcode: OM03, name: Al Batinah South}
  - {country: Oman, iso3: OMN, pcode: OM04, name: Al Buraymi}
  - {country: Oman, iso3: OMN, pcode: OM05, name: Al Dhahira}
  - {country: Oman, iso3: OMN, pcode: OM06, name: Al Wusta}
  - {country: Oman, iso3: OMN, pcode: OM07, name: Ash Sharqiyah North}
  - {country: Oman, iso3: OMN, pcode: OM08, name: Ash Sharqiyah South}
  - {country: Oman, iso3: OMN, pcode: OM09, name: Dhofar}
  - {country: Oman, iso3: OMN, pcode: OM10, name: Musandam}
  - {country: Oman, iso3: OMN, pcode: OM11, name: Muscat}
  - {country: Qatar, iso3: QAT, pcode: QA1, name: Ad Dawhah}
  - {country: Qatar, iso3: QAT, pcode: QA2, name: Al Daayen}
  - {country: Qatar, iso3: QAT, pcode: QA3, name: Al Khor}
  - {country: Qatar, iso3: QAT, pcode: QA4, name: Al Wakrah}
  - {country: Qatar, iso3: QAT, pcode: QA5, name: Ar Rayyan}
  - {country: Qatar, iso3: QAT, pcode: QA6, name: Madinat ash Shamal}
  - {country: Qatar, iso3: QAT, pcode: QA7, name: Umm Salal}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA11, name: Al Bahah}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA08, name: Al Hudud ash Shamaliyah}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA12, name: Al Jawf}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA03, name: Al Madinah}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA05, name: Al Quassim}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA01, name: Ar Riyad}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA04, name: Ash Sharqiyah}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA14, name: Asir}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA06, name: Hail}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA09, name: Jizan}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA02, name: Makkah}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA10, name: Najran}
  - {country: Saudi Arabia, iso3: SAU, pcode: SA07, name: Tabuk}
  - {country: Somalia, iso3: SOM, pcode: SO11, name: Awdal}
  - {country: Somalia, iso3: SOM, pcode: SO25, name: Bakool}
  - {country: Somalia, iso3: SOM, pcode: SO22, name: Banadir}
  - {country: Somalia, iso3: SOM, pcode: SO16, name: Bari}
  - {country: Somalia, iso3: SOM, pcode: SO24, name: Bay}
  - {country: Somalia, iso3: SOM, pcode: SO19, name: Galgaduud}
  - {country: Somalia, iso3: SOM, pcode: SO26, name: Gedo}
  - {country: Somalia, iso3: SOM, pcode: SO20, name: Hiraan}
  - {country: Somalia, iso3: SOM, pcode: SO28, name: Lower Juba}
  - {country: Somalia, iso3: SOM, pcode: SO23, name: Lower Shabelle}
  - {country: Somalia, iso3: SOM, pcode: SO27, name: Middle Juba}
  - {country: Somalia, iso3: SOM, pcode: SO21, name: Middle Shabelle}
  - {country: Somalia, iso3: SOM, pcode: SO18, name: Mudug}
  - {country: Somalia, iso3: SOM, pcode: SO17, name: Nugaal}
  - {country: Somalia, iso3: SOM, pcode: SO15, name: Sanaag}
  - {country: Somalia, iso3: SOM, pcode: SO14, name: Sool}
  - {country: Somalia, iso3: SOM, pcode: SO13, name: Togdheer}
  - {country: Somalia, iso3: SOM, pcode: SO12, name: Woqooyi Galbeed}
  - {country: State of Palestine, iso3: PSE, pcode: PS02, name: Gaza Strip}
  - {country: State of Palestine, iso3: PSE, pcode: PS01, name: West Bank}
  - {country: Sudan, iso3: SDN, pcode: SD19, name: Abyei PCA}
  - {country: Sudan, iso3: SDN, pcode: SD15, name: Aj Jazirah}
  - {country: Sudan, iso3: SDN, pcode: SD08, name: Blue Nile}
  - {country: Sudan, iso3: SDN, pcode: SD06, name: Central Darfur}
  - {country: Sudan, iso3: SDN, pcode: SD05, name: East Darfur}
  - {country: Sudan, iso3: SDN, pcode: SD12, name: Gedaref}
  - {country: Sudan, iso3: SDN, pcode: SD11, name: Kassala}
  - {country: Sudan, iso3: SDN, pcode: SD01, name: Khartoum}
  - {country: Sudan, iso3: SDN, pcode: SD02, name: North Darfur}
  - {country: Sudan, iso3: SDN, pcode: SD13, name: North Kordofan}
  - {country: Sudan, iso3: SDN, pcode: SD17, name: Northern}
  - {country: Sudan, iso3: SDN, pcode: SD10, name: Red Sea}
  - {country: Sudan, iso3: SDN, pcode: SD16, name: River Nile}
  - {country: Sudan, iso3: SDN, pcode: SD14, name: Sennar}
  - {country: Sudan, iso3: SDN, pcode: SD03, name: South Darfur}
  - {country: Sudan, iso3: SDN, pcode: SD07, name: South Kordofan}
  - {country: Sudan, iso3: SDN, pcode: SD04, name: West Darfur}
  - {country: Sudan, iso3: SDN, pcode: SD18, name: West Kordofan}
  - {country: Sudan, iso3: SDN, pcode: SD09, name: White Nile}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY08, name: Al Hasakeh}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY02, name: Aleppo}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY11, name: Ar Raqqa}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY13, name: As Sweida}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY01, name: Damascus}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY12, name: Dara}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY09, name: Deir ez Zor}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY05, name: Hama}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY04, name: Homs}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY07, name: Idleb}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY06, name: Lattakia}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY14, name: Quneitra}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY03, name: Rural Damascus}
  - {country: Syrian Arab Republic, iso3: SYR, pcode: SY10, name: Tartous}
  - {country: Tunisia, iso3: TUN, pcode: TN01, name: Ariana}
  - {country: Tunisia, iso3: TUN, pcode: TN04, name: Beja}
  - {country: Tunisia, iso3: TUN, pcode: TN02, name: Ben Arous (Tunis Sud)}
  - {country: Tunisia, iso3: TUN, pcode: TN03, name: Bizerte}
  - {country: Tunisia, iso3: TUN, pcode: TN05, name: Gabes}
  - {country: Tunisia, iso3: TUN, pcode: TN06, name: Gafsa}
  - {country: Tunisia, iso3: TUN, pcode: TN07, name: Jendouba}
  - {country: Tunisia, iso3: TUN, pcode: TN08, name: Kairouan}
  - {country: Tunisia, iso3: TUN, pcode: TN09, name: Kasserine}
  - {country: Tunisia, iso3: TUN, pcode: TN10, name: Kebili}
  - {country: Tunisia, iso3: TUN, pcode: TN11, name: Le Kef}
  - {country: Tunisia, iso3: TUN, pcode: TN12, name: Mahdia}
  - {country: Tunisia, iso3: TUN, pcode: TN13, name: Manubah}
  - {country: Tunisia, iso3: TUN, pcode: TN15, name: Medenine}
  - {country: Tunisia, iso3: TUN, pcode: TN14, name: Monastir}
  - {country: Tunisia, iso3: TUN, pcode: TN16, name: Nabeul}
  - {country: Tunisia, iso3: TUN, pcode: TN17, name: Sfax}
  - {country: Tunisia, iso3: TUN, pcode: TN18, name: Sidi Bou Zid}
  - {country: Tunisia, iso3: TUN, pcode: TN19, name: Siliana}
  - {country: Tunisia, iso3: TUN, pcode: TN20, name: Sousse}
  - {country: Tunisia, iso3: TUN, pcode: TN21, name: Tataouine}
  - {country: Tunisia, iso3: TUN, pcode: TN22, name: Tozeur}
  - {country: Tunisia, iso3: TUN, pcode: TN23, name: Tunis}
  - {country: Tunisia, iso3: TUN, pcode: TN24, name: Zaghouan}
  - {country: United Arab Emirates, iso3: ARE, pcode: AE1, name: Abu Dhabi}
  - {country: United Arab Emirates, iso3: ARE, pcode: AE2, name: Ajman}
  - {country: United Arab Emirates, iso3: ARE, pcode: AE4, name: Al Fujayrah}
  - {country: United Arab Emirates, iso3: ARE, pcode: AE5, name: Dubai}
  - {country: United Arab Emirates, iso3: ARE, pcode: AE6, name: Ras Al Khaymah}
  - {country: United Arab Emirates, iso3: ARE, pcode: AE7, name: Shariqah}
  - {country: United Arab Emirates, iso3: ARE, pcode: AE8, name: Umm Al Qaywayn}
  - {country: Yemen, iso3: YEM, pcode: YE12, name: Abyan}
  - {country: Yemen, iso3: YEM, pcode: YE30, name: Ad Dali}
  - {country: Yemen, iso3: YEM, pcode: YE24, name: Aden}
  - {country: Yemen, iso3: YEM, pcode: YE14, name: Al Bayda}
  - {country: Yemen, iso3: YEM, pcode: YE18, name: Al Hodeidah}
  - {country: Yemen, iso3: YEM, pcode: YE16, name: Al Jawf}
  - {country: Yemen, iso3: YEM, pcode: YE28, name: Al Maharah}
  - {country: Yemen, iso3: YEM, pcode: YE27, name: Al Mahwit}
  - {country: Yemen, iso3: YEM, pcode: YE29, name: Amran}
  - {country: Yemen, iso3: YEM, pcode: YE20, name: Dhamar}
  - {country: Yemen, iso3: YEM, pcode: YE19, name: Hadramawt}
  - {country: Yemen, iso3: YEM, pcode: YE17, name: Hajjah}
  - {country: Yemen, iso3: YEM, pcode: YE11, name: Ibb}
  - {country: Yemen, iso3: YEM, pcode: YE25, name: Lahj}
  - {country: Yemen, iso3: YEM, pcode: YE26, name: Marib}
  - {country: Yemen, iso3: YEM, pcode: YE31, name: Raymah}
  - {country: Yemen, iso3: YEM, pcode: YE22, name: Sadah}
  - {country: Yemen, iso3: YEM, pcode: YE23, name: Sanaa}
  - {country: Yemen, iso3: YEM, pcode: YE13, name: Sanaa City}
  - {country: Yemen, iso3: YEM, pcode: YE21, name: Shabwah}
  - {country: Yemen, iso3: YEM, pcode: YE32, name: Socotra}
  - {country: Yemen, iso3: YEM, pcode: YE15, name: Taiz}

admin1_name_mappings:
  "MUTHANA": "IQG03"
  "Hasaka": "SY08"
  "Hassake": "SY08"
  "al-raka": "SY11"
  "al-amana": "YE23"
  "Amanat Al Asimah / أمانة العاصمة": "YE13"
  "Amanat Al Asimah": "YE13"
  "Rural-Dam": "SY03"
  "al-qunitara": "SY14"
  "Sana'a Govt.": "YE23"
  "BORDJ BOU ARRERIDJ": "DZ011"
  "BAGHDAD-KARKH": "IQG08"
  "BAGHDAD-RESAFA": "IQG08"
  "NOUAKCHOTT NORD": "MR10"
  "NOUAKCHOTT OUEST": "MR10"
  "NOUAKCHOTT SUD": "MR10"
  "DHAKHILIA": "OM01"
  "Dakhiliya": "OM01"
  "North Batinah": "OM02"
  "N.BATINA": "OM02"
  "South Batinah": "OM03"
  "S.BATINA": "OM03"
  "North Sharqia": "OM07"
  "N.SHARQIA": "OM07"
  "South Sharqia": "OM08"
  "S.SHARQIA": "OM08"
  "AlWousta": "OM06"
  "Djibouti Ville": "DJ04"

admin1_name_replacements:
  " urban": ""
  "sud": "south"
  "ouest": "west"
  "est": "east"
  "nord": "north"
  "'": ""
  "/": " "
  ".": " "
  " region": ""

admin1_fuzzy_dont:
  - "nord"
  - "north"
  - "sud"
  - "south"
  - "est"
  - "east"
  - "ouest"
  - "west"
  - "syria"
